{"version":3,"sources":["./src/app/user-listing/user-listing.component.html","./src/app/user-listing/user-listing.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/bookmark/bookmark.component.html","./src/app/bookmark/bookmark.component.ts","./src/app/book-listing/book-listing.component.html","./src/app/book-listing/book-listing.component.ts","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/searchfilter.pipe.ts","./src/app/book.service.ts","./src/app/search.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/advanced-search/advanced-search.component.ts","./src/app/advanced-search/advanced-search.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/book-contents/book-contents.component.ts","./src/app/book-contents/book-contents.component.html","./src/app/app.module.ts","./src/app/user-sidenav/user-sidenav.component.html","./src/app/user-sidenav/user-sidenav.component.ts","./src/app/auth.service.ts","./src/app/view-feedback/view-feedback.component.html","./src/app/view-feedback/view-feedback.component.ts","./src/app/feedback.service.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/post-feedback/post-feedback.component.ts","./src/app/post-feedback/post-feedback.component.html","./src/app/book-details/book-details.component.ts","./src/app/book-details/book-details.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/advanced-search.pipe.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/app/book-management/book-management.component.ts","./src/app/book-management/book-management.component.html","./src/app/bookmark.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- sidebar -->\n<app-user-sidenav></app-user-sidenav>\n\n<!--account listing-->\n<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">Users</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of users\">\n                <td>\n                    <span>{{user.username}}</span>\n                    <button class=\"btn btn-danger ml-2\" data-target=\"#deleteModal\" data-toggle=\"modal\" (click)=\"onDeleteModal(user)\"><span class=\"material-icons\">delete</span></button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <span class=\"close\" title=\"Close Modal\">×</span>\n        <div class=\"modal-content\">\n            <div class=\"content\">\n                <h1 id=\"deleteModalLabel\">Delete User</h1>\n                <p>Are you sure you want to delete this user?</p>\n            </div>\n            <div class=\"clearfix\">\n                <button type=\"button\" class=\"btn btn-secondary del\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-danger del\" data-dismiss=\"modal\" (click)=\"deleteUser()\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-listing',\n  templateUrl: './user-listing.component.html',\n  styleUrls: ['./user-listing.component.css']\n})\nexport class UserListingComponent implements OnInit {\n\n  users: any[] = [];\n  tempUser: any;\n\n  constructor(private userService: UserService) {\n    userService.getAllUsers().subscribe( data => this.users = data);\n   }\n\n  ngOnInit(): void {\n  }\n\n  onDeleteModal(user){\n    this.tempUser = user;\n  }\n\n  deleteUser(){\n    this.userService.deleteUser(this.tempUser._id).subscribe(results => {\n      location.reload();\n    });\n  }\n\n}\n","<div class=\"categories\">\n    <figure *ngFor=\"let category of categories\" [routerLink]=\"['/books', category.label]\">\n        <img src=\"{{category.image}}\" height=\"60\" width=\"60\" />\n        <figcaption> {{category.name}} </figcaption>\n    </figure>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  categories = [{\n    \"image\": \"assets/images/book.png\",\n    \"name\": \"Books\",\n    \"label\": \"book\"\n  },\n  {\n    \"image\": \"assets/images/magazine.png\",\n    \"name\": \"Magazines & Articles\",\n    \"label\": \"magazine\"\n  },\n  {\n    \"image\": \"assets/images/newspaper.png\",\n    \"name\": \"Newspapers\",\n    \"label\": \"newspaper\"\n  },\n  {\n    \"image\": \"assets/images/journal.png\",\n    \"name\": \"Journals\",\n    \"label\": \"journal\"\n  }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- sidebar -->\n<app-user-sidenav></app-user-sidenav>\n\n<!--account listing-->\n<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">Bookmarks</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let bookmark of user.bookmarks\">\n                <td>\n                    <span class=\"bookTitle\" (click)=\"redirectToBook(bookmark)\">{{bookmark.title}}</span>\n                    <button class=\"btn btn-danger ml-2\" data-target=\"#deleteModal\" data-toggle=\"modal\" (click)=\"onDeleteModal(bookmark)\"><span class=\"material-icons\">delete</span></button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <span class=\"close\" title=\"Close Modal\">×</span>\n        <div class=\"modal-content\">\n            <div class=\"content\">\n                <h1 id=\"deleteModalLabel\">Delete Bookmark</h1>\n                <p>Are you sure you want to delete this bookmark?</p>\n            </div>\n            <div class=\"clearfix\">\n                <button type=\"button\" class=\"btn btn-secondary del\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-danger del\" data-dismiss=\"modal\" (click)=\"deleteBookmark(tempBookmark._id)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookmarkService } from '../bookmark.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-bookmark',\n  templateUrl: './bookmark.component.html',\n  styleUrls: ['./bookmark.component.css']\n})\nexport class BookmarkComponent implements OnInit {\n\n  user: any = {};\n  tempBookmark: any;\n\n  constructor(private userService: UserService, private route: ActivatedRoute, private router: Router, private bookmarkService: BookmarkService) {\n    userService.getUser(this.route.snapshot.params.id).subscribe((data:any) => this.user = data);\n   }\n\n  ngOnInit(): void {\n  }\n\n  redirectToBook(book){\n    this.router.navigateByUrl('/book/' + book._id);\n  }\n\n  onDeleteModal(bookmark){\n    this.tempBookmark = bookmark;\n  }\n\n  deleteBookmark(book_id){\n    this.bookmarkService.deleteBookmark(this.user._id, book_id).subscribe(results => {\n      location.reload();\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h5>{{category | titlecase }}</h5>\n    <hr>\n    <!-- <div class=\"book\" *ngFor=\"let book of books | searchfilter: searchService.searchKeyword | advancedSearch: searchService.searchFilters\" [routerLink]=\"['/book',book._id]\"> -->\n    <div class=\"book\" *ngFor=\"let book of (searchService.searchFilters ? (books | advancedSearch: searchService.searchFilters) : (books | searchfilter: searchService.searchKeyword))\" [routerLink]=\"['/book',book._id]\">\n        <img src=\"{{book.coverArt}}\" />\n        <div class=\"description\">\n            <h5>{{book.title}}</h5>\n            <p>{{book.author}}</p>\n        </div>\n    </div>\n</div>","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookService } from '../book.service';\nimport { SearchService } from '../search.service';\n\n@Component({\n  selector: 'app-book-listing',\n  templateUrl: './book-listing.component.html',\n  styleUrls: ['./book-listing.component.css']\n})\nexport class BookListingComponent implements OnChanges {\n\n  category: string = 'All';\n  books: any[];\n\n  constructor(private route: ActivatedRoute, private bookService: BookService, public searchService: SearchService) {\n\n    // if category is selected\n    if(this.route.snapshot.params.category){\n      this.category = this.route.snapshot.params.category;\n      bookService.getBooksByCategory(this.category).subscribe( data => {\n        this.books = data;\n      });\n    }\n    else{\n      bookService.getAllBooks().subscribe( data => {\n        this.books = data;\n      });\n    }\n  }\n\n  ngOnInit(){}\n\n  ngOnDestroy(){\n    this.searchService.clear();\n    location.reload();\n  }\n\n  ngOnChanges(){\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  id: string;\n  token: string;\n  password: string;\n\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) {\n    this.id = this.route.snapshot.params.id;\n    this.token = this.route.snapshot.params.token;\n   }\n\n  ngOnInit(): void {\n  }\n\n  resetPassword(){\n    this.userService.resetPassword(this.id, this.token, this.password).subscribe(res => {\n      alert(\"Your password has been reset!\");\n      this.router.navigate(['/login']);\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h4>Reset Password</h4>\n    <input input type=\"password\" class=\"form-control\" placeholder=\"New password\" [(ngModel)]=\"password\" required>\n    <br>\n    <button type=\"submit\" (click)=\"resetPassword()\">Reset Password</button>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchfilter'\n})\nexport class SearchfilterPipe implements PipeTransform {\n\n  // books: any[] = [];\n\n  // constructor(private bookService: BookService) {\n  //   bookService.getAllBooks().subscribe((data: any) => this.books = data);\n  //  }\n\n  transform(books: any[], keyword: string): any[] {\n    if(!books) return [];\n    if(!keyword) return books;\n\n    return books.filter(book => book.title.toLocaleLowerCase().includes(keyword.toLowerCase()));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BookService {\n\n  categoryUrl: string = \"http://localhost:3000/api/category\"\n  listingUrl: string = \"http://localhost:3000/api/listing\";\n  bookUrl:string = \"http://localhost:3000/api/book\";\n\n  constructor(private http: HttpClient) { }\n\n\n  getAllBooks(){\n    return this.http.get<any[]>(this.bookUrl);\n  }\n\n  getBooksByCategory(category){\n    return this.http.get<any[]>(this.categoryUrl + '/' + category);\n  }\n\n  getBooksByQuery(query){\n    return this.http.get<any[]>(this.listingUrl + '/' + query);\n  }\n\n  getBook(id){\n    return this.http.get(this.bookUrl + '/' + id);\n  }\n\n  addBook(data) {\n    return this.http.post<any[]>(this.bookUrl, data);\n    }\n\n  updateBook(id, data){\n    return this.http.put<any[]>(this.bookUrl + \"/\" + id, data);\n  }\n\n  deleteBook(id){\n    return this.http.delete<any[]>(this.bookUrl + '/' + id);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  searchKeyword: string;\n  searchFilters: Object;\n\n  constructor() { }\n\n  setKeyword(searchKeyword){\n    this.searchKeyword = searchKeyword;\n  }\n\n  setFilters(searchFilters){\n    this.searchFilters = searchFilters;\n  }\n\n  clear(){\n    this.searchKeyword = '';\n    this.searchFilters = {};\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'libraryApp';\n}\n","<app-header></app-header>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SearchService } from '../search.service';\n\n@Component({\n  selector: 'app-advanced-search',\n  templateUrl: './advanced-search.component.html',\n  styleUrls: ['./advanced-search.component.css']\n})\nexport class AdvancedSearchComponent implements OnInit {\n\n  searchForm: FormGroup;\n\n  constructor(private searchService: SearchService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.searchForm = this.fb.group({\n      title: new FormControl(''),\n      author: new FormControl(''),\n      publisher: new FormControl(''),\n      publicationDate: new FormControl(''),\n      category: new FormControl('')\n    });\n  }\n\n  search(filters:any):void {\n    Object.keys(filters).forEach(key => filters[key] === '' ? delete filters[key] : key);\n    this.searchService.setFilters(filters);\n    this.router.navigate(['books']);\n  }\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"searchForm\" novalidate autocomplete=\"off\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <td colspan=\"2\">Search for:\n                        <input type=\"radio\" id=\"book\" name=\"category\" value=\"book\" formControlName=\"category\">\n                        <label for=\"book\">Books</label>\n                        <input type=\"radio\" id=\"magazine\" name=\"category\" value=\"magazine\" formControlName=\"category\">\n                        <label for=\"magazine\">Magazines</label>\n                        <input type=\"radio\" id=\"newspaper\" name=\"category\" value=\"newspaper\" formControlName=\"category\">\n                        <label for=\"newspaper\">Newspapers</label>\n                        <input type=\"radio\" id=\"journal\" name=\"category\" value=\"journal\" formControlName=\"category\">\n                        <label for=\"journal\">Journals</label>\n                    </td>\n                </tr>\n                <tr>\n                    <td><label for=\"title\">Title:</label></td>\n                    <td><input type=\"text\" id=\"title\" name=\"title\" formControlName=\"title\"></td>\n                </tr>\n                <tr>\n                    <td><label for=\"author\">Author:</label></td>\n                    <td><input type=\"text\" id=\"author\" name=\"author\" formControlName=\"author\"></td>\n                </tr>\n                <tr>\n                    <td><label for=\"publisher\">Publisher:</label></td>\n                    <td><input type=\"text\" id=\"publisher\" name=\"publisher\" formControlName=\"publisher\"></td>\n                </tr>\n                <tr>\n                    <td><label for=\"publicationDate\">Year of Publication:</label></td>\n                    <td><input type=\"number\" id=\"publicationDate\" name=\"publicationDate\" formControlName=\"publicationDate\"></td>\n                </tr><br>\n                <tr><button class=\"btn btn-primary\" (click)=\"search(searchForm.value)\"><i class=\"fa fa-search\"></i> Search</button></tr>\n            </thead>\n            <tbody>\n\n            </tbody>\n        </table>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any = {};\n  updateAccountForm: FormGroup;\n\n  constructor(private userService: UserService, private route: ActivatedRoute, private formBuilder: FormBuilder) { \n    userService.getUser(this.route.snapshot.params.id).subscribe((data:any) => this.user = data);\n  }\n\n  ngOnInit(): void {\n\n    this.updateAccountForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.email],\n      password: ['', Validators.required]\n    });\n\n  }\n\n  onUpdateModal(user){\n    //omitt patching of password field\n    this.updateAccountForm.patchValue({\n      username: user.username,\n      email: user.email\n    });\n  }\n\n  updateAccount() {\n    var credentials:any;\n    credentials = {\n      username: this.updateAccountForm.value.username,\n      email: this.updateAccountForm.value.email,\n      password: this.updateAccountForm.value.password\n    }\n\n    this.userService.updateUser(this.user._id, credentials).subscribe(res => {\n      this.userService.getUser(this.user._id).subscribe((data: any) => this.user = data);\n      location.reload();\n      alert(\"Profile updated successfully.\")\n    })\n  }\n\n}\n","<!-- sidebar -->\n<app-user-sidenav></app-user-sidenav>\n\n<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">Profile Details\n                    <button class=\"btn edit\" (click)=\"onUpdateModal(user)\" data-target=\"#updateModal\" data-toggle=\"modal\"><span class=\"material-icons\">edit</span></button>\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <br>\n            <tr>\n                <p>Username</p>\n                <p>{{user.username}}</p>\n            </tr><br>\n            <tr>\n                <p>Email</p>\n                <p>{{user.email}}</p>\n            </tr><br>\n            <tr>\n                <p>Password</p>\n                <p>********</p>\n            </tr>\n            <br>\n        </tbody>\n    </table>\n</div>\n<!-- Update Modal -->\n<div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"updateModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"updateModalLabel\">Update Profile</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span style=\"color:black;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"updateAccountForm\">\n                    <input class=\"form-control mt-3\" placeholder=\"Username\" formControlName=\"username\">\n                    <label class=\"text-danger\" *ngIf=\"updateAccountForm.get('username').touched && updateAccountForm.get('username').errors?.required\">This\n                        field is mandatory.</label>\n                    <input class=\"form-control mt-3\" placeholder=\"Email\" formControlName=\"email\">\n                    <label class=\"text-danger\" *ngIf=\"updateAccountForm.get('email').touched && updateAccountForm.get('email').errors?.email\">Invalid email.</label>\n                    <input type=\"password\" class=\"form-control mt-3\" placeholder=\"Password\" formControlName=\"password\">\n                    <label class=\"text-danger\" *ngIf=\"updateAccountForm.get('password').touched && updateAccountForm.get('password').errors?.required\">This\n                        field is mandatory.</label>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateAccount()\" [disabled]=\"!updateAccountForm.valid\">Save Changes</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  email: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendEmail(){\n    this.userService.sendEmail(this.email).subscribe(res => {\n      alert(\"Reset password link successfully sent to your email.\");\n      location.reload();\n    },\n    error => {\n      alert(\"Email not registered.\");\n      location.reload();\n    });\n  }\n\n}\n","<div class=\"container\">\n    <img src=\"https://marketing-image-production.s3.amazonaws.com/uploads/35c763626fdef42b2197c1ef7f6a199115df7ff779f7c2d839bd5c6a8c2a6375e92a28a01737e4d72f42defcac337682878bf6b71a5403d2ff9dd39d431201db.png\" />\n    <h4>Forgot your Password?</h4>\n    <p>Enter your email below and we'll email you with instructions on how to reset your password.</p>\n    <input input class=\"form-control\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n    <br>\n    <button type=\"submit\" (click)=\"sendEmail()\">Reset Password</button>\n</div>","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport WebViewer from '@pdftron/webviewer';\n\n@Component({\n  selector: 'app-book-contents',\n  templateUrl: './book-contents.component.html',\n  styleUrls: ['./book-contents.component.css']\n})\nexport class BookContentsComponent implements AfterViewInit {\n\n  @ViewChild('viewer') viewerRef: ElementRef;\n  url: string;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.queryParams.subscribe(params => {this.url = params.url;})\n   }\n\n   ngAfterViewInit(): void {\n\n    let fullUrl = 'https://e-library-application.herokuapp.com/' + this.url;\n\n    WebViewer({\n      path: '../assets/lib',\n      initialDoc: fullUrl,\n    }, this.viewerRef.nativeElement).then(instance => {\n\n        const {documentViewer, annotationManager} = instance.Core;\n\n        documentViewer.addEventListener('documentLoaded', async () => {\n          const doc = documentViewer.getDocument();\n          const xfdfString = await annotationManager.exportAnnotations();\n          const options = { xfdfString };\n          const data = await doc.getFileData(options);\n          const arr = new Uint8Array(data);\n          const blob = new Blob([arr], { type: 'application/pdf' });\n          const date = new Date();\n        });\n\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div #viewer class=\"webviewer\"></div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SearchfilterPipe } from './searchfilter.pipe';\n\n/* Navigation Components */\nimport { HeaderComponent } from './header/header.component'\nimport { UserSidenavComponent } from './user-sidenav/user-sidenav.component';\n\n/* Components */\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdvancedSearchComponent } from './advanced-search/advanced-search.component';\nimport { PostFeedbackComponent } from './post-feedback/post-feedback.component';\nimport { LoginComponent } from './login/login.component'\nimport { SignupComponent } from './signup/signup.component'\nimport { BookListingComponent } from './book-listing/book-listing.component';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { BookContentsComponent } from './book-contents/book-contents.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BookmarkComponent } from './bookmark/bookmark.component';\nimport { UserListingComponent } from './user-listing/user-listing.component';\nimport { BookManagementComponent } from './book-management/book-management.component';\nimport { ViewFeedbackComponent } from './view-feedback/view-feedback.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n/* Services */\nimport { AuthService } from './auth.service';\nimport { BookService } from './book.service';\nimport { UserService } from './user.service';\nimport { BookmarkService } from './bookmark.service';\nimport { FeedbackService } from './feedback.service';\nimport { SearchService } from './search.service';\nimport { AdvancedSearchPipe } from './advanced-search.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    UserSidenavComponent,\n    HomeComponent,\n    PostFeedbackComponent,    \n    LoginComponent,\n    SignupComponent,\n    BookListingComponent,\n    BookDetailsComponent,\n    BookContentsComponent,\n    ProfileComponent,\n    BookmarkComponent,\n    UserListingComponent, \n    BookManagementComponent,    \n    ViewFeedbackComponent,\n    AdvancedSearchComponent,\n    SearchfilterPipe,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    AdvancedSearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthService, BookService, UserService, BookmarkService, FeedbackService, SearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- sidebar -->\n<div class=\"sidebar\">\n    <ul class=\"list-group\">\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" [routerLink]=\"['/profile',id]\">\n            <span class=\"material-icons\">person</span> <span class=\"label\">Profile</span>\n        </li>\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\" [routerLink]=\"['/bookmarks',id]\">\n            <span class=\"material-icons\">bookmarks</span> <span class=\"label\">Bookmarks</span>\n        </li>\n        <div *ngIf=\"role==['admin']\" class=\"dropdown dropright\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-center dropdown-toggle\" data-toggle=\"dropdown\">\n                <span class=\"material-icons\">lock</span> <span>Private Access</span>\n                <ul class=\"dropdown-menu\">\n                    <li class=\"dropdown-item\" [routerLink]=\"['/users',id]\"> Users</li>\n                    <li class=\"dropdown-item\" [routerLink]=\"['/manage-resources',id]\"> E-Resources</li>\n                    <li class=\"dropdown-item\" [routerLink]=\"['/feedbacks',id]\"> Feedbacks</li>\n                </ul>\n            </li>\n        </div>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-sidenav',\n  templateUrl: './user-sidenav.component.html',\n  styleUrls: ['./user-sidenav.component.css']\n})\nexport class UserSidenavComponent implements OnInit {\n\n  user: any;\n  id: String;\n  role: String;\n\n  constructor(private userService: UserService, private authService: AuthService, private route: ActivatedRoute) {\n    userService.getUser(this.route.snapshot.params.id).subscribe((data:any) => {\n      this.user = data;});\n    this.id = authService.getUserId();\n    this.role = authService.getUserRole();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  regUserUrl:string = \"http://localhost:3000/api/reguser/\";\n  authuser:string = \"http://localhost:3000/api/authuser/\";\n\n  constructor(private http: HttpClient) { }\n\n  register(username: string, email:string, pw: string, role: string) {\n    return this.http.post<any[]>(this.regUserUrl, { 'username': username, 'email': email,\n   'password': pw, 'role': role });\n    }\n\n    login(username: string, pw: string) {\n      return this.http.post<any[]>(this.authuser, { 'username': username,\n     'password': pw });\n    }\n\n    getUserId(){\n      return sessionStorage.getItem(\"userId\");\n    }\n\n    getUserRole() {\n      return sessionStorage.getItem(\"role\")\n    }\n\n    setUserRole(role: string) {\n      sessionStorage.setItem(\"role\", role);\n    }\n      \n      setSecureToken(secure_token: string) {\n      sessionStorage.setItem(\"token\", secure_token)\n      }\n\n      getSecureToken() {\n      return sessionStorage.getItem(\"token\")\n      }\n\n      getTokenHeader(){\n        return new HttpHeaders().set('Authorization', 'Bearer' + this.getSecureToken());\n      }\n      \n      logout() {\n        sessionStorage.removeItem(\"userId\");\n        sessionStorage.removeItem(\"token\");\n        sessionStorage.removeItem(\"role\");\n      }\n\n    }","<!-- sidebar -->\n<app-user-sidenav></app-user-sidenav>\n\n<!--account listing-->\n<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">Feedbacks</th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let feedback of feedbacks\">\n            <tr>\n                <td class=\"expand\" data-toggle=\"collapse\" data-target=\"#contents\" (click)=\"selectFeedback(feedback._id)\">\n                    <span>{{feedback.subject}}</span>\n                    <button class=\"btn btn-danger ml-2\" data-target=\"#deleteModal\" data-toggle=\"modal\" (click)=\"onDeleteModal(feedback)\"><span class=\"material-icons\">delete</span></button>\n                </td>\n            </tr>\n            <tr id=\"contents\" class=\"collapse expand row-child\" *ngIf=\"selected==feedback._id\">\n                <p>From: {{feedback.email}}</p>\n                <p>{{feedback.feedback}}</p>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <span class=\"close\" title=\"Close Modal\">×</span>\n        <div class=\"modal-content\">\n            <div class=\"content\">\n                <h1 id=\"deleteModalLabel\">Delete Feedback</h1>\n                <p>Are you sure you want to delete this feedback?</p>\n            </div>\n            <div class=\"clearfix\">\n                <button type=\"button\" class=\"btn btn-secondary del\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-danger del\" data-dismiss=\"modal\" (click)=\"deleteFeedback(tempFeedback._id)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    var coll = document.getElementsByClassName(\"collapsible\");\n    var i;\n\n    for (i = 0; i < coll.length; i++) {\n        coll[i].addEventListener(\"click\", function() {\n            this.classList.toggle(\"active\");\n            var content = this.nextElementSibling;\n            if (feedback.style.display === \"block\") {\n                feedback.style.display = \"none\";\n            } else {\n                feedback.style.display = \"block\";\n            }\n        });\n    }\n</script>","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from '../feedback.service';\n\n@Component({\n  selector: 'app-view-feedback',\n  templateUrl: './view-feedback.component.html',\n  styleUrls: ['./view-feedback.component.css']\n})\nexport class ViewFeedbackComponent implements OnInit {\n\n  feedbacks: any[] = [];\n  tempFeedback: any;\n  selected: string = '';\n\n  constructor(private feedbackService: FeedbackService) {\n    feedbackService.getAllFeedbacks().subscribe( data => this.feedbacks = data);\n   }\n\n  ngOnInit(): void {\n  }\n\n  //used for toggling contents of each feedback\n  selectFeedback(id){\n    this.selected = id;\n  }\n\n  onDeleteModal(feedback){\n    this.tempFeedback = feedback;\n  }\n\n  deleteFeedback(feedback_id){\n    this.feedbackService.deleteFeedback(feedback_id).subscribe(results => {\n      location.reload();\n    });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  url: string = \"http://localhost:3000/api/feedback\";\n\n  constructor(private http: HttpClient) { }\n\n  getAllFeedbacks(){\n    return this.http.get<any[]>(this.url);\n  }\n\n  postFeedback(email: string, subject: string, feedback: string) {\n    return this.http.post<any[]>(this.url, {'email': email, 'subject': subject, 'feedback': feedback });\n  }\n\n  deleteFeedback(id){\n      return this.http.delete<any[]>(this.url + '/' + id);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-light navbar-light\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <div class=\"collapse navbar-collapse\">\n                <a class=\"navbar-brand\" routerLink=\"/home\">\n                    <img src=\"assets/images/logo.png\" alt=\"logo\" style=\"width:55px;\">\n                </a>\n                <ul class=\"nav navbar-nav\">\n                    <li><a class=\"nav-link\" routerLink=\"/feedback\" routerLinkActive=\"active\">Feedback</a></li>\n                    <li *ngIf=\"auth.getSecureToken()==null\"><a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Sign in</a></li>\n                    <li *ngIf=\"auth.getSecureToken()==null\"><a class=\"nav-link\" routerLink=\"/signup\" routerLinkActive=\"active\">Sign up</a></li>\n                    <li *ngIf=\"auth.getSecureToken()!=null\"><a class=\"nav-link\" [routerLink]=\"['/profile',auth.getUserId()]\" routerLinkActive=\"active\">Profile</a></li>\n                    <li *ngIf=\"auth.getSecureToken()!=null\"><a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\" (click)=\"auth.logout()\">Logout</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>\n\n<div class=\"divider\">\n    <div class=\"search\" *ngIf=\"router.url === '/home' || router.url === '/books' || router.url === '/books/book' || router.url === '/books/magazine' || router.url === '/books/newspaper' || router.url === '/books/journal'\">\n        <input type=\"text\" placeholder=\"Start your search...\" autocomplete=\"off\" [(ngModel)]=\"searchInput\" (ngModelChange)=\"search()\">\n        <span routerLink=\"/search\">ADVANCED SEARCH</span>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\nimport { BookService } from '../book.service';\nimport { SearchService } from '../search.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n\n  searchInput: any;\n\n  constructor(public router: Router, public auth: AuthService, \n    private bookService: BookService, private searchService: SearchService) {\n     }\n\n  ngOnInit(): void {\n  }\n\n  search(){\n    if(this.router.url != 'books/:category'){\n      this.router.navigate(['books']);\n    }\n    this.searchService.setKeyword(this.searchInput);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FeedbackService } from '../feedback.service';\n\n@Component({\n  selector: 'app-post-feedback',\n  templateUrl: './post-feedback.component.html',\n  styleUrls: ['./post-feedback.component.css']\n})\nexport class PostFeedbackComponent implements OnInit {\n\n  feedbackForm: FormGroup;\n\n  constructor(private feedbackService: FeedbackService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.feedbackForm = this.fb.group({\n      email: ['', [Validators.email]],\n      subject: ['', [Validators.required, Validators.maxLength(30)]],\n      feedback: ['', [Validators.required]]\n      });\n  }\n\n  onSubmit(){\n    this.feedbackService.postFeedback(this.feedbackForm.value.email,\n   this.feedbackForm.value.subject, this.feedbackForm.value.feedback).subscribe(results => {\n    location.reload();\n    });\n    }\n\n}\n","<div class=\"form\">\n    <h4>Feedback</h4>\n\n    <form [formGroup]=\"feedbackForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n        <input type=\"text\" formControlName=\"email\" id=\"email\" placeholder=\"Email\">\n        <label class=\"label\" *ngIf=\"feedbackForm.get('email').hasError('email')\">*Invalid email</label>\n        <br>\n        <input type=\"text\" formControlName=\"subject\" id=\"subject\" placeholder=\"Subject\">\n        <label class=\"label\" *ngIf=\"feedbackForm.get('subject').touched && feedbackForm.get('subject').errors?.required\">*This field is mandatory.</label>\n        <label class=\"label\" *ngIf=\"feedbackForm.get('subject').touched && feedbackForm.get('subject').hasError('maxlength')\">*30 characters max</label>\n        <br>\n        <textarea formControlName=\"feedback\" id=\"feedback\" placeholder=\"Feedback\"></textarea>\n        <label class=\"label\" *ngIf=\"feedbackForm.get('feedback').touched && feedbackForm.get('feedback').errors?.required\">*This field is mandatory.</label>\n        <br>\n        <button type=\"submit\" [disabled]=\"!feedbackForm.valid\">Submit</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { BookService } from '../book.service';\nimport { BookmarkService } from '../bookmark.service';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  book: any = {};\n\n  constructor(private bookService: BookService, private bookmarkService: BookmarkService,\n    private route: ActivatedRoute, private router: Router, private authService: AuthService) { \n      bookService.getBook(this.route.snapshot.params.id).subscribe((data:any) => this.book = data);\n  }\n\n  addBookmark(){\n    if(this.authService.getUserId()){\n      var book:any;\n      book = {\n        _id: this.book._id,\n        title: this.book.title,\n        author: this.book.author,\n        coverArt: this.book.coverArt,\n        publisher: this.book.publisher,\n        publicationDate: this.book.publicationDate,\n        isbn: this.book.isbn,\n        category: this.book.category,\n        genre: this.book.genre,\n        language: this.book.language,\n        summary: this.book.summary,\n        url: this.book.url\n      }\n\n      this.bookmarkService.addBookmark(this.authService.getUserId(), book).subscribe(data => alert(\"Item bookmarked.\"));\n    }else{\n      alert(\"Please log in first.\");\n    }\n  }\n\n  routeToContents(){\n    if(this.authService.getUserId()){\n    let navigationExtras: NavigationExtras = {\n      queryParams: {url: this.book.url}\n    }\n    this.router.navigate(['read'], navigationExtras);\n  }\n    else{\n          alert(\"Please log in first.\");\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"coverArt\">\n        <button class=\"overlay\" (click)=\"addBookmark()\"><span class=\"material-icons\">bookmark</span></button>\n        <img src=\"{{book.coverArt}}\" />\n        <button class=\"btn btn-lg btn-primary btn-block text-uppercase font-weight-bold\" (click)=\"routeToContents()\">Read Now!</button>\n    </div>\n    <div class=\"description\">\n        <h4>{{book.title}}</h4>\n        <p>{{book.author}}</p>\n        <hr>\n        <p class=\"label\">Summary</p>\n        <p>{{book.summary}}</p>\n        <hr>\n        <table>\n            <tr>\n                <th>Publisher</th>\n                <td>{{book.publisher}}</td>\n            </tr>\n            <tr>\n                <th>Publisher Date</th>\n                <td>{{book.publicationDate}}</td>\n            </tr>\n            <tr>\n                <th>ISBN</th>\n                <td>{{book.isbn}}</td>\n            </tr>\n            <tr>\n                <th>Genre</th>\n                <td>{{book.genre}}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n\n\n    this.registerForm = this.fb.group ({\n      role: 'user',\n      name: ['', [Validators.required, Validators.maxLength(20)]],\n      email: ['', [Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n      });\n       }\n\n       onSubmit() {\n      this.authService.register(this.registerForm.value.name,this.registerForm.value.email,\n      this.registerForm.value.password, this.registerForm.value.role).subscribe();\n      this.router.navigateByUrl('/login');\n      alert(\"Registration successful.\")\n       }\n\n  }\n","<div class=\"container-fluid\">\n    <div class=\"row no-gutter\">\n        <div class=\"col-md-8 col-lg-6\">\n            <div class=\"login d-flex align-items-center py-5\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-9 col-lg-8 mx-auto\">\n                            <h3 class=\"login-heading mb-4\">Register now!</h3>\n                            <form [formGroup]=\"registerForm\" novalidate autocomplete=\"off\" (ngSubmit)=\"onSubmit()\">\n                                <div class=\"form-label-group\"><b>Role:</b>\n                                    <input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"user\">User\n                                    <input type=\"radio\" formControlName=\"role\" name=\"role\" value=\"admin\">Admin\n                                </div>\n                                <div class=\"form-label-group\">\n                                    <input formControlName=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Username\" required autofocus>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('name').touched && registerForm.get('name').errors?.required\">This\n                                        field is mandatory.</label>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('name').touched && registerForm.get('name').hasError('maxlength')\">20 characters max</label>\n                                </div>\n\n                                <div class=\"form-label-group\">\n                                    <input formControlName=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('email').touched && registerForm.get('email').errors?.required\">This\n                                        field is mandatory</label>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('email').touched && registerForm.get('email').hasError('email')\">Invalid email</label>\n                                </div>\n\n                                <div class=\"form-label-group\">\n                                    <input formControlName=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" type=\"password\" required>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('password').touched && registerForm.get('password').errors?.required\">This\n                                        field is mandatory</label>\n                                    <label class=\"text-danger\" *ngIf=\"registerForm.get('password').touched &&\n                                        registerForm.get('password').hasError('minlength')\">\n                                        * Password must contain at least 8 characters\n                                    </label>\n                                </div>\n\n                                <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\" type=\"submit\" [disabled]=\"!registerForm.valid\">Sign up</button>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img src=\"assets/images/login.JPG\" class=\"image\">\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  userId:any;\n\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n   }\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const permission = route.data[\"permission\"];\n      if (this.authService.getSecureToken()!=null && permission.only.includes(this.authService.getUserRole())) {\n        return true;\n      }\n      else {\n        //User will be redirected to home page if they visit any page that they are unauthorized to.\n        alert(\"You are not authorized to access the page\");\n        this.router.navigateByUrl('/home');\n      }\n    } \n  }\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AuthGuard} from './auth.guard';\n\n/*Components*/\nimport { HomeComponent } from './home/home.component';\nimport { PostFeedbackComponent } from './post-feedback/post-feedback.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdvancedSearchComponent } from './advanced-search/advanced-search.component';\nimport { BookListingComponent } from './book-listing/book-listing.component';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { BookContentsComponent } from './book-contents/book-contents.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BookmarkComponent } from './bookmark/bookmark.component';\nimport { UserListingComponent } from './user-listing/user-listing.component';\nimport { BookManagementComponent } from './book-management/book-management.component';\nimport { ViewFeedbackComponent } from './view-feedback/view-feedback.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n{path: '', redirectTo: 'home', pathMatch: 'full'},\n{path: 'home', component: HomeComponent},\n{path: 'login', component: LoginComponent},\n{path: 'signup', component: SignupComponent},\n{path: 'search', component: AdvancedSearchComponent},\n{path: 'books', component: BookListingComponent},\n{path: 'books/:category', component: BookListingComponent},\n{path: 'book/:id', component: BookDetailsComponent},\n{path: 'read', component: BookContentsComponent},\n{path: 'profile/:id', component: ProfileComponent, canActivate: [AuthGuard], data:\n{permission: {only: [\"user\", \"admin\"]}}},\n{path: 'bookmarks/:id', component: BookmarkComponent , canActivate: [AuthGuard], data:\n{permission: {only: [\"user\", \"admin\"]}}},\n{path: 'users/:id', component: UserListingComponent, canActivate: [AuthGuard], data:\n{permission: {only: [\"admin\"]}}},\n{path: 'manage-resources/:id', component: BookManagementComponent, canActivate: [AuthGuard], data:\n{permission: {only: [\"admin\"]}}},\n{path: 'feedbacks/:id', component: ViewFeedbackComponent , canActivate: [AuthGuard], data:\n{permission: {only: [\"user\", \"admin\"]}}},\n{path: 'feedback', component: PostFeedbackComponent},\n{path: 'forgot-password', component: ForgotPasswordComponent},\n{path: 'reset-password/:id/:token', component: ResetPasswordComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(routes);\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'advancedSearch'\n})\nexport class AdvancedSearchPipe implements PipeTransform {\n\n  transform(books:any[], filters:any){\n\n    if(!books) return [];\n    if(!filters) return books;\n\n    var filteredBooks = [];\n    // const keys = Object.keys(filters);\n    // const filterBook = book => keys.every(key => book[key].toLocaleLowerCase().includes(filters[key].toLocaleLowerCase()));\n    // return books.filter(filterBook);\n\n    const keys = Object.keys(filters);\n    const filterBook = book => {\n      keys.every(key => book[key].toLocaleLowerCase().includes(filters[key].toLocaleLowerCase()));\n      filteredBooks.push(books.filter(filterBook));\n    }\n    return filteredBooks;\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  results: any = false;\n  userId : String;\n\n  constructor(private fb: FormBuilder, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = this.fb.group ({\n      name: '',\n      password: ''\n      });\n    }\n\n      onSubmit() {\n        this.authService.login(this.loginForm.value.name,\n        this.loginForm.value.password).subscribe(data => {\n        this.results = data;\n        if (this.results[0].auth)\n        {\n        sessionStorage.setItem(\"userId\", this.results[0].id);\n        this.authService.setSecureToken(this.results[0].token);\n        this.authService.setUserRole(this.results[0].role);\n        this.router.navigateByUrl('/profile/' + this.results[0].id);\n        } else{\n         alert(\"Wrong username or password\")\n         }\n        });\n         }\n  }\n","<div class=\"container-fluid\">\n    <div class=\"row no-gutter\">\n        <div class=\"col-md-8 col-lg-6\">\n            <div class=\"login d-flex align-items-center py-5\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-9 col-lg-8 mx-auto\">\n                            <h3 class=\"login-heading mb-4\">Welcome back!</h3>\n                            <form [formGroup]=\"loginForm\" novalidate autocomplete=\"off\" (ngSubmit)=\"onSubmit()\">\n                                <div class=\"form-label-group\">\n                                    <input input formControlName=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Username\" required autofocus>\n                                </div>\n                                <div class=\"form-label-group\">\n                                    <input formControlName=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" type=\"password\" required>\n                                </div>\n\n                                <div class=\"custom-control custom-checkbox mb-3\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label\">Remember password</label>\n                                </div>\n                                <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\" type=\"submit\" [disabled]=\"!loginForm.valid\">Sign in</button>\n                                <div class=\"text-center\">\n                                    <a class=\"small\" routerLink=\"/forgot-password\">Forgot password?</a></div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img src=\"assets/images/login.JPG\" class=\"image\">\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  url:string = \"http://localhost:3000/api/user\";\n  emailURL: string = \"http://localhost:3000/api/forgot-password\"\n  resetPassURL: string = \"http://localhost:3000/api/reset-password\";\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  getAllUsers(){\n    return this.http.get<any[]>(this.url, {headers: this.authService.getTokenHeader()});\n  }\n\n  getUser(id){\n    return this.http.get(this.url + '/' + id, {headers: this.authService.getTokenHeader()});\n  }\n\n  updateUser(id, data){\n    return this.http.put<any[]>(this.url + \"/\" + id, data, {headers: this.authService.getTokenHeader()});\n }\n\n deleteUser(id){\n  return this.http.delete<any[]>(this.url + '/' + id);\n }\n\n sendEmail(email){\n  return this.http.put<any[]>(this.emailURL, {'email':email});\n }\n\n resetPassword(id, token, password){\n   return this.http.put<any[]>(this.resetPassURL + '/' + id + '/' + token, {'password':password});\n }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-book-management',\n  templateUrl: './book-management.component.html',\n  styleUrls: ['./book-management.component.css']\n})\nexport class BookManagementComponent implements OnInit {\n\n  tempBook: any;\n  bookList: any[];\n  addBookForm: FormGroup;\n  updateBookForm: FormGroup;\n\n  constructor(private bookService: BookService, private formBuilder: FormBuilder) {\n    bookService.getAllBooks().subscribe((data: any) => this.bookList = data);\n   }\n\n  ngOnInit(): void {\n    this.addBookForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      author: [''],\n      publisher: [''],\n      isbn: [''],\n      category: [''],\n      language: [''],\n      summary: [''],\n    });\n\n    this.updateBookForm = this.formBuilder.group({\n      id:[''],\n      title: ['', [Validators.required]],\n      author: [''],\n      publisher: [''],\n      isbn: [''],\n      category: [''],\n      language: [''],\n      summary: [''],\n    });\n  }\n\n  addBook(selectedCategory){\n    var data:any;\n    data = {\n      title: this.addBookForm.value.title,\n      author: this.addBookForm.value.author,\n      publisher: this.addBookForm.value.publisher,\n      isbn: this.addBookForm.value.isbn,\n      category: selectedCategory,\n      language: this.addBookForm.value.language,\n      summary: this.addBookForm.value.summary\n    }\n\n    this.bookService.addBook(data).subscribe(results => {\n    location.reload();\n    alert(\"Item added successfully.\")\n    });\n    }\n\n  updateBook(selectedCategory) {\n    var data:any;\n    data = {\n      title: this.updateBookForm.value.title,\n      author: this.updateBookForm.value.author,\n      publisher: this.updateBookForm.value.publisher,\n      isbn: this.updateBookForm.value.isbn,\n      category: selectedCategory,\n      language: this.updateBookForm.value.language,\n      summary: this.updateBookForm.value.summary\n    }\n\n    this.bookService.updateBook(this.updateBookForm.value.id, data).subscribe(res => {\n      location.reload();\n      alert(\"Item updated successfully.\")\n    })\n  }\n\n  onUpdateModal(book){\n    this.updateBookForm.patchValue({\n      id: book._id,\n      title: book.title,\n      author: book.author,\n      publisher: book.publisher,\n      isbn: book.isbn,\n      category: book.category,\n      language: book.language,\n      summary: book.summary,\n    });\n  }\n\n  onDeleteModal(book){\n    this.tempBook = book;\n  }\n\n  deleteBook(){\n    this.bookService.deleteBook(this.tempBook._id).subscribe(results => {\n      location.reload();\n      alert(\"Item deleted successfully.\")\n    });\n  }\n\n}\n","<!-- sidebar -->\n<app-user-sidenav></app-user-sidenav>\n\n<!--resource listing-->\n<div class=\"container\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">Manage E-Resources\n                    <button class=\"btn add\" data-target=\"#addModal\" data-toggle=\"modal\"><span class=\"material-icons\">add</span></button>\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let book of bookList\">\n                <td>\n                    <span class=\"bookTitle\">{{book.title}}</span>\n                    <button class=\"btn btn-info action\" (click)=\"onUpdateModal(book)\" data-target=\"#updateModal\" data-toggle=\"modal\"><span class=\"material-icons\">create</span></button>\n                    <button class=\"btn btn-danger ml-2 action\" (click)=\"onDeleteModal(book)\" data-target=\"#deleteModal\" data-toggle=\"modal\"><span class=\"material-icons\">delete</span></button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<!-- Add Modal -->\n<div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"updateModalLabel\">Add E-resource</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span style=\"color:black;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"addBookForm\">\n                    <input class=\"form-control mt-3\" placeholder=\"Title\" formControlName=\"title\">\n                    <label class=\"text-danger\" *ngIf=\"addBookForm.get('title').touched && addBookForm.get('title').errors?.required\">This\n                        field is mandatory.</label>\n                    <input class=\"form-control mt-3\" placeholder=\"Author\" formControlName=\"author\">\n                    <input class=\"form-control mt-3\" placeholder=\"Publisher\" formControlName=\"publisher\">\n                    <select class=\"form-control mt-3\" #selectedCategory>\n                        <option value=\"\" selected hidden>Category</option>\n                        <option value=\"book\">Books</option>\n                        <option value=\"magazine\">Magazines & Articles</option>\n                        <option value=\"newspaper\">Newspapers</option>\n                        <option value=\"journal\">Journals</option>\n                      </select>\n                    <label class=\"text-danger\" *ngIf=\"addBookForm.get('category').touched\">This\n                        field is mandatory.</label>\n                    <input class=\"form-control mt-3\" placeholder=\"ISBN\" formControlName=\"isbn\">\n                    <input class=\"form-control mt-3\" placeholder=\"Language\" formControlName=\"language\">\n                    <textarea class=\"form-control mt-3\" placeholder=\"Summary\" formControlName=\"summary\" style=\"height:100px;\"></textarea>\n                </form>\n            </div>\n\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"addBook(selectedCategory.value)\">Add Book</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Update Modal -->\n<div class=\"modal fade\" id=\"updateModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"updateModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"updateModalLabel\">Update E-resource</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span style=\"color:black;\" aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"updateBookForm\">\n                    <input class=\"form-control mt-3\" placeholder=\"Title\" formControlName=\"title\">\n                    <label class=\"text-danger\" *ngIf=\"updateBookForm.get('title').touched && updateBookForm.get('title').errors?.required\">This\n                        field is mandatory.</label>\n                    <input class=\"form-control mt-3\" placeholder=\"Author\" formControlName=\"author\">\n                    <input class=\"form-control mt-3\" placeholder=\"Publisher\" formControlName=\"publisher\">\n                    <select class=\"form-control mt-3\" #selectedCategory2>\n                        <option value=\"book\" [selected]=\"updateBookForm.value.category == 'book'\">Books</option>\n                        <option value=\"magazine\" [selected]=\"updateBookForm.value.category == 'magazine'\">Magazines & Articles</option>\n                        <option value=\"newspaper\" [selected]=\"updateBookForm.value.category == 'newspaper'\">Newspapers</option>\n                        <option value=\"journal\" [selected]=\"updateBookForm.value.category == 'journal'\">Journals</option>\n                      </select>\n                    <label class=\"text-danger\" *ngIf=\"updateBookForm.get('category').touched\">This\n                        field is mandatory.</label>\n                    <input class=\"form-control mt-3\" placeholder=\"ISBN\" formControlName=\"isbn\">\n                    <input class=\"form-control mt-3\" placeholder=\"Language\" formControlName=\"language\">\n                    <textarea class=\"form-control mt-3\" placeholder=\"Summary\" formControlName=\"summary\" style=\"height:100px;\"></textarea>\n                </form>\n            </div>\n\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateBook(selectedCategory2.value)\">Save Changes</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <span class=\"close\" title=\"Close Modal\">×</span>\n        <div class=\"modal-content\">\n            <div class=\"content\">\n                <h1 id=\"deleteModalLabel\">Delete E-Resource</h1>\n                <p>Are you sure you want to delete this e-resource?</p>\n            </div>\n            <div class=\"clearfix\">\n                <button type=\"button\" class=\"btn btn-secondary del\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-danger del\" data-dismiss=\"modal\" (click)=\"deleteBook()\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BookmarkService {\n\n  url:string = \"http://localhost:3000/api/bookmark\";\n\n  constructor(private http: HttpClient) {\n   }\n\n  addBookmark(userId, book){\n    return this.http.post<any[]>(this.url + '/' + userId + '/' + book._id, book);\n   }\n\n  deleteBookmark(userId, bookId){\n    return this.http.delete<any[]>(this.url + '/' + userId + '/' + bookId);\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}